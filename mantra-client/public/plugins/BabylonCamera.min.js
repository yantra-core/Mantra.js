(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}(g.PLUGINS || (g.PLUGINS = {})).BabylonCamera = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,_toPropertyKey(i.key),i)}}function _createClass(e,t,a){return t&&_defineProperties(e.prototype,t),a&&_defineProperties(e,a),Object.defineProperty(e,"prototype",{writable:!1}),e}function _defineProperty(e,t,a){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var i=a.call(e,t||"default");if("object"!==_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var BabylonCamera=function(){function e(t){var a=t.camera;_classCallCheck(this,e),this.id=e.id,this.startingZoom=.25;var i={camera:a};this.config=i}return _createClass(e,[{key:"init",value:function(e,t,a){e.setZoom=this.setZoom.bind(this),this.scene=a,this.game=e,this.engine=t,this.initialDistance=2560,this.initialAlpha=0,this.initialBeta=.35,this.camera=new BABYLON.ArcRotateCamera("camera",this.initialAlpha,this.initialBeta,this.initialDistance,new BABYLON.Vector3(0,0,0),this.scene),e.camera=this.camera,this.game.systemsManager.addSystem(this.id,this),this.setupCameraControls(),this.camera.upperBetaLimit=Math.PI,this.camera.lowerBetaLimit=0,this.camera.upperAlphaLimit=null,this.camera.lowerAlphaLimit=null,this.camera.minZ=.1,this.camera.maxZ=2e4,this.camera.lowerRadiusLimit=50,this.camera.upperRadiusLimit=61440,this.camera.wheelPrecision=.5,this.camera.alpha+=Math.PI/2,this.camera.radius=2560*this.startingZoom}},{key:"setZoom",value:function(e){this.camera.radius=2560*e}},{key:"setupCameraControls",value:function(){this.camera.attachControl(document.getElementById("gameHolder"),!1),this.camera.inputs.attached.keyboard.keysUp=[],this.camera.inputs.attached.keyboard.keysDown=[],this.camera.inputs.attached.keyboard.keysLeft=[],this.camera.inputs.attached.keyboard.keysRight=[],this.camera._panningMouseButton=0}},{key:"setupCameraControlsManual",value:function(){this.camera.detachControl(this.scene.getEngine().getRenderingCanvas()),document.getElementById("gameHolder").addEventListener("wheel",this.onMouseWheel.bind(this),{passive:!1}),this.scene.getEngine().getRenderingCanvas().addEventListener("wheel",function(e){return e.stopPropagation()},{passive:!1})}},{key:"onMouseWheel",value:function(e){this.camera.radius-=.1*e.deltaY,e.preventDefault()}},{key:"resetToHome",value:function(){this.camera.alpha=this.initialAlpha,this.camera.beta=this.initialBeta,this.camera.radius=this.initialDistance}},{key:"getCamera",value:function(){return this.camera}},{key:"render",value:function(){var e=this.game;if(this.config.camera&&this.config.camera.follow){var t=this.game.getEntity(e.currentPlayerId);if(t&&t.graphics){var a=t.graphics["graphics-babylon"];if(a){switch(e.physics.dimension){case 2:this.camera.target.x+=1*(a.position.x-this.camera.target.x),this.camera.target.z+=1*(a.position.z-this.camera.target.z);break;case 3:this.camera.target=a.position;break;default:throw new Error("Unknown physics dimensions, cannot update camera")}}}}}},{key:"renderLerp",value:function(){var e=this.game;if(this.config.camera&&this.config.camera.follow){var t=this.game.getEntity(e.currentPlayerId);if(t&&t.graphics){var a=t.graphics["graphics-babylon"];if(a){var i=new BABYLON.Vector3(a.position.x,this.camera.target.y,a.position.z);this.camera.target=BABYLON.Vector3.Lerp(this.camera.target,i,1)}}}}},{key:"update",value:function(){}}]),e}();_defineProperty(BabylonCamera,"id","graphics-babylon-camera"),_defineProperty(BabylonCamera,"removable",!1);var _default=exports.default=BabylonCamera;

},{}]},{},[1])(1)
});
