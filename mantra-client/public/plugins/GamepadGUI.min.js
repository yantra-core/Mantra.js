(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}(g.PLUGINS || (g.PLUGINS = {})).GamepadGUI = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _ZoomSlider=_interopRequireDefault(require("./lib/ZoomSlider.js"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_toPropertyKey(n.key),n)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function _defineProperty(e,t,i){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,t||"default");if("object"!==_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}var keyMap={up:"KeyW",down:"KeyS",left:"KeyA",right:"KeyD"},GamepadGUI=function(){function e(){var t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).useZoomSlider,i=void 0===t||t;_classCallCheck(this,e),this.id=e.id,this.hiding=!1,this.moving=null,this.useZoomSlider=i,this.useZoomSlider=!1,this.lastDirection=null}return _createClass(e,[{key:"init",value:function(e){var t=this;this.game=e,this.useZoomSlider&&(this.zoomSlider=new _ZoomSlider.default(e),this.zoomSlider.setValue(4.5),e.on("game::ready",function(){t.zoomSlider.slider.style.display="block"})),e.loadCSS("/plugins/GamepadGUI/gamepad.css");var i=document.createElement("div");i.style.position="fixed",i.style.bottom="0",i.style.touchAction="manipulation",i.style.userSelect="none",i.style.width="100%",i.style.height="150px",i.style.zIndex="9999",this.createSNESGamepad(i),document.body.appendChild(i);var n=document.createElement("div");n.id="dpad-area",n.style.position="absolute",n.style.left="2vmin",n.style.bottom="2.5vmin",n.style.width="35vmin",n.style.height="35vmin",n.style.zIndex="10000",i.appendChild(n);var d=!1;n.addEventListener("pointerdown",function(e){d=!0,r(e)}),document.addEventListener("pointermove",function(e){d&&r(e)}),document.addEventListener("pointerup",function(e){d=!1,o.lastDirection&&(document.dispatchEvent(new KeyboardEvent("keyup",{code:keyMap[o.lastDirection]})),o.lastDirection=null)});var o=this;function r(e){var t,i=n.getBoundingClientRect(),d=i.left+i.width/2,r=i.top+i.height/2,a=e.clientX-d,s=e.clientY-r;t=Math.abs(a)>Math.abs(s)?a>0?"right":"left":s>0?"down":"up",o.moving=t;var v=t;o.lastDirection&&o.lastDirection!==v&&document.dispatchEvent(new KeyboardEvent("keyup",{code:keyMap[o.lastDirection]})),o.lastDirection=v,document.dispatchEvent(new KeyboardEvent("keydown",{code:keyMap[v]}))}var a=document.getElementById("snes-gamepad");a.style.position="fixed",a.style.left="50%",a.style.bottom="0",a.style.transform="translateX(-50%)";var s=document.getElementById("select");s.addEventListener("pointerdown",function(e){document.dispatchEvent(new KeyboardEvent("keydown",{code:"KeyU"}))}),s.addEventListener("pointerup",function(e){document.dispatchEvent(new KeyboardEvent("keyup",{code:"KeyU"}))}),s.title="Open Editor Menu",graphics.style.display="none",graphics.addEventListener("pointerdown",function(t){var i=e.graphics[0].constructor.name;"BabylonGraphics"===i?e.switchGraphics("CSSGraphics"):"CSSGraphics"===i&&e.switchGraphics("BabylonGraphics")}),graphics.addEventListener("pointerup",function(e){});var v=document.getElementById("start");v.title="Warp to World",v.addEventListener("pointerdown",function(e){document.dispatchEvent(new KeyboardEvent("keydown",{code:"KeyI"}))}),v.addEventListener("pointerup",function(e){document.dispatchEvent(new KeyboardEvent("keyup",{code:"KeyI"}))}),is_touch_enabled()&&(s.style.display="none",v.style.display="none");document.getElementById("up"),document.getElementById("down"),document.getElementById("left"),document.getElementById("right");var l=document.getElementById("y"),c=document.getElementById("x");l.addEventListener("pointerdown",function(e){document.dispatchEvent(new KeyboardEvent("keydown",{code:"KeyJ"}))}),l.addEventListener("pointerup",function(e){document.dispatchEvent(new KeyboardEvent("keyup",{code:"KeyJ"}))}),c.addEventListener("pointerdown",function(e){document.dispatchEvent(new KeyboardEvent("keydown",{code:"KeyL"}))}),c.addEventListener("pointerup",function(e){document.dispatchEvent(new KeyboardEvent("keyup",{code:"KeyL"}))});var u=document.getElementById("b"),y=document.getElementById("a");u.addEventListener("pointerdown",function(e){document.dispatchEvent(new KeyboardEvent("keydown",{code:"KeyH"}))}),u.addEventListener("pointerup",function(e){document.dispatchEvent(new KeyboardEvent("keyup",{code:"KeyH"}))}),y.addEventListener("pointerdown",function(e){document.dispatchEvent(new KeyboardEvent("keydown",{code:"KeyK"}))}),y.addEventListener("pointerup",function(e){document.dispatchEvent(new KeyboardEvent("keyup",{code:"KeyK"}))})}},{key:"update",value:function(){}},{key:"sendInputs",value:function(){var e=Object.keys(controls).every(function(e){return!controls[e]});e||(this.lastControlsAllFalse=e,this.game.communicationClient&&this.game.communicationClient.sendMessage("player_input",{controls:controls}))}},{key:"createSNESGamepad",value:function(e){e.innerHTML='\n  \n  \n<article id="snes-gamepad" aria-label="SNES controller">\n\n  \x3c!-- removed ( for now )\n  <button id="l" class="is3d">Top left<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></button>\n  <button id="r" class="is3d">Top Right<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></button>\n  --\x3e\n  \n  \x3c!-- frame --\x3e\n  <div class="face is3d"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  \n  \x3c!-- Letters and Text --\x3e\n  <h1>SUPER MANTRA</h1>\n  <p>CSS ENTERTAINMENT SYSTEM</p>\n  \n  <p class="letter letter-x" aria-hidden="true">X</p>\n  <p class="letter letter-y" aria-hidden="true">Y</p>\n  <p class="letter letter-a" aria-hidden="true">A</p>\n  <p class="letter letter-b" aria-hidden="true">B</p>\n  <p class="letter-start" aria-hidden="true">START</p>\n  <p class="letter-select" aria-hidden="true">SELECT</p>\n  \n  \x3c!-- directional buttons + axis --\x3e\n  <div class="axis is3d"><div style="--z:1"></div><div style="--z:2"></div><div style="--z:3"></div><div style="--z:4"></div><div style="--z:5"></div><div style="--z:6"></div></div>\n  \n  \x3c!-- Menu buttons (start/select) --\x3e\n  <button id="select" class="is3d">Select<div style="--z:1"></div><div style="--z:2"></div><div style="--z:3"></div><div style="--z:4"></div></button>\n\n  <button id="graphics" class="is3d">Graphics<div style="--z:1"></div><div style="--z:2"></div><div style="--z:3"></div><div style="--z:4"></div></button>\n\n  <button id="start" class="is3d">Start<div style="--z:1"></div><div style="--z:2"></div><div style="--z:3"></div><div style="--z:4"></div></button>\n  \x3c!-- Action buttons --\x3e\n  <div class="buttons">\n    <button id="x" class="circle is3d">x<div></div><div></div><div></div><div></div></button>\n    <button id="y" class="circle is3d">y<div></div><div></div><div></div><div></div></button>\n    <button id="a" class="circle is3d">a<div></div><div></div><div></div><div></div></button>\n    <button id="b" class="circle is3d">b<div></div><div></div><div></div><div></div></button>\n  </div>\n    \n</article>\n\n  \n    '}},{key:"render",value:function(){}},{key:"destroy",value:function(){}}]),e}();_defineProperty(GamepadGUI,"id","gui-gamepad");var _default=exports.default=GamepadGUI;function is_touch_enabled(){return"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}function triggerHapticFeedback(){navigator.vibrate?(navigator.vibrate(50),game.playNote("C4",.8)):game.playNote("C4")}

},{"./lib/ZoomSlider.js":2}],2:[function(require,module,exports){
"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,_toPropertyKey(r.key),r)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,t||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var ZoomSlider=exports.default=function(){function e(t){_classCallCheck(this,e),this.game=t,this.minZoom=.1,this.maxZoom=10,this.slider=this.createSlider(),this.addEventListeners()}return _createClass(e,[{key:"createSlider",value:function(){var e=document.createElement("input");return e.id="zoomSlider",e.type="range",e.min=this.logTransform(this.minZoom),e.max=this.logTransform(this.maxZoom),e.step="any",e.value=this.logTransform(1),e.style.display="none",e.style.zIndex=9e3,document.body.appendChild(e),e}},{key:"addEventListeners",value:function(){var e=this;this.slider.addEventListener("input",function(t){e.handleSliderChange(t)})}},{key:"setValue",value:function(e){this.slider.value=this.logTransform(e)}},{key:"handleSliderChange",value:function(e){var t=parseFloat(e.target.value),o=this.inverseLogTransform(t);this.game.setZoom(o)}},{key:"logTransform",value:function(e){return Math.log(e/this.minZoom)/Math.log(this.maxZoom/this.minZoom)}},{key:"inverseLogTransform",value:function(e){return this.minZoom*Math.pow(this.maxZoom/this.minZoom,e)}}]),e}();

},{}]},{},[1])(1)
});
